apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xscbootstrap.sc.mojaloop.io
spec:
  defaultCompositeDeletePolicy: Foreground
  group: sc.mojaloop.io
  names:
    kind: XSCBootstrap
    plural: xscbootstrap
  claimNames:
    kind: SCBootstrap
    plural: scbootstrap
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              managementPolicies:
                default:
                  - Create
                  - LateInitialize
                  - Observe
                description: |-
                  A ManagementAction represents an action that the Crossplane controllers
                  can take on an external resource.
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                    - Observe
                    - Create
                    - Update
                    - Delete
                    - LateInitialize
                    - "*"
                  type: string
                type: array
              providerConfigsRef:
                type: object
                description: |-
                  The name of the provider config to use for the remote and local k8s providers.
                required:
                  - scK8sProviderName
                  - scHelmProviderName
                properties:
                  scK8sProviderName:
                    type: string
                    description: |-
                      The name of the provider config to use for the remote k8s provider.
                  scHelmProviderName:
                    type: string
                    description: |-
                      The name of the provider config to use for the remote helm provider.
              parameters:
                type: object
                properties:
                  calico:
                    type: object
                    description: |-
                      The Calico Helm Chart to deploy. Changing the parameters will not trigger a new deployment it will not update the existing deployment.
                    properties:
                      chartVersion:
                        type: string
                        default: "3.30.0"
                        description: |-
                          The version of the Calico Helm Chart to deploy.
                      values:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                        description: |-
                          The values to pass to the Calico Helm Chart.
                        default:
                          installation:
                            enabled: true
                            registry: mirror.gcr.io
                  argocd:
                    type: object
                    description: |-
                      The ArgoCD application to deploy. Changing the parameters of helm chart will not trigger a new deployment it will not update the existing deployment.
                    properties:
                      chartVersion:
                        type: string
                        default: "7.6.12"
                        description: |-
                          The version of the chart to deploy.
                      values:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                        description: |-
                          The values to pass to the ArgoCD application.
                        default:
                          fullnameOverride: argocd
                          configs:
                            cm:
                              exec.enabled: "true"
                              kustomize.buildOptions: "--enable-helm --helm-kube-version 1.29-0 --load-restrictor LoadRestrictionsNone"
                              application.resourceTrackingMethod: "annotation"
                            params:
                              server.insecure: true
                              server.enable.proxy.extension: "true"
                              controller.diff.server.side: "true"
                            cmp:
                              create: true
                              plugins:
                                envsubstappofapp:
                                  init:
                                    command: ["sh", "-c"]
                                    args: ["kustomize build . --load-restrictor LoadRestrictionsNone -o raw-kustomization.yaml"]
                                  generate:
                                    command: ["sh", "-c"]
                                    args: ["envsubst < raw-kustomization.yaml > processed-kustomization.yaml && cp processed-kustomization.yaml /dev/stdout"]
                                  discover:
                                    fileName: "kustomization.*"
                                envsubst:
                                  discover:
                                    fileName: "kustomization.*"
                                  generate:
                                    command: ["sh", "-c"]
                                    args: ["for f in *.yaml ; do cat $f | envsubst > $f.sub && mv $f.sub $f ; done && kustomize build . --enable-helm --helm-kube-version 1.29-0 --load-restrictor LoadRestrictionsNone > /dev/stdout"]
                          repoServer:
                            env:
                              - name: HELM_CACHE_HOME
                                value: /helm-working-dir
                              - name: HELM_CONFIG_HOME
                                value: /helm-working-dir
                              - name: HELM_DATA_HOME
                                value: /helm-working-dir
                            volumes:
                              - name: custom-tools
                                emptyDir: {}
                              - name: cmp-plugin
                                configMap:
                                  name: argocd-cmp-cm
                            initContainers:
                              - name: download-tools
                                image: golang:1.22.4-alpine3.20
                                command: ["sh", "-c"]
                                args: ["apk add git && go install github.com/drone/envsubst/cmd/envsubst@v1.0.3 && mv $GOPATH/bin/envsubst /custom-tools/ && wget https://gist.githubusercontent.com/enriched/11c7d81aa271b258f835620b1aca2e55/raw/2017a4202da30506b1fedc2981afed41e259fe77/in-pod-kubeconfig.sh && chmod +x in-pod-kubeconfig.sh && mv in-pod-kubeconfig.sh /custom-tools/"]
                                volumeMounts:
                                  - mountPath: /custom-tools
                                    name: custom-tools
                            extraContainers:
                              - name: debug-tools
                                image: quay.io/argoproj/argocd
                                command: ["sh", "-c"]
                                args: ["while true; do echo \"running\"; sleep 300; done"]
                                volumeMounts:
                                  - mountPath: /var/run/argocd
                                    name: var-files
                                  - mountPath: /home/argocd/cmp-server/plugins
                                    name: plugins
                                  - mountPath: /tmp
                                    name: tmp
                                  - name: custom-tools
                                    subPath: envsubst
                                    mountPath: /usr/local/bin/envsubst
                                  - name: custom-tools
                                    subPath: in-pod-kubeconfig.sh
                                    mountPath: /usr/local/bin/in-pod-kubeconfig.sh
                                  - name: helm-working-dir
                                    mountPath: /helm-working-dir
                              - name: envsubstappofapp
                                command: ["/var/run/argocd/argocd-cmp-server"]
                                image: quay.io/argoproj/argocd
                                args: ["--loglevel", "debug"]
                                securityContext:
                                  runAsNonRoot: true
                                  runAsUser: 999
                                volumeMounts:
                                  - mountPath: /var/run/argocd
                                    name: var-files
                                  - mountPath: /home/argocd/cmp-server/plugins
                                    name: plugins
                                  - mountPath: /tmp
                                    name: tmp
                                  - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                                    subPath: envsubstappofapp.yaml
                                    name: cmp-plugin
                                  - name: custom-tools
                                    subPath: envsubst
                                    mountPath: /usr/local/bin/envsubst
                              - name: envsubst
                                command: ["/var/run/argocd/argocd-cmp-server"]
                                image: quay.io/argoproj/argocd
                                args: ["--loglevel", "debug"]
                                securityContext:
                                  runAsNonRoot: true
                                  runAsUser: 999
                                volumeMounts:
                                  - mountPath: /var/run/argocd
                                    name: var-files
                                  - mountPath: /home/argocd/cmp-server/plugins
                                    name: plugins
                                  - mountPath: /tmp
                                    name: tmp
                                  - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                                    subPath: envsubst.yaml
                                    name: cmp-plugin
                                  - name: custom-tools
                                    subPath: envsubst
                                    mountPath: /usr/local/bin/envsubst
                      application:
                        type: object
                        description: |-
                          The ArgoCD application to deploy.
                        properties:
                          source:
                            type: object
                            description: |-
                              The source of the ArgoCD application.
                            properties:
                              repoURL:
                                type: string
                                default: "https://github.com/mojaloop/iac-modules.git"
                                description: |-
                                  The URL of the repository containing the ArgoCD application.
                              targetRevision:
                                type: string
                                default: "main"
                                description: |-
                                  The target revision of the ArgoCD application.
                              path:
                                type: string
                                default: "gitops/argo-apps/overlays/local/storage-cluster"
                                description: |-
                                  The path to the ArgoCD application.
                              envVars:
                                type: array
                                description: |-
                                  The environment variables to pass to the ArgoCD application.
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: |-
                                        The name of the environment variable.
                                    value:
                                      type: string
                                      description: |-
                                        The value of the environment variable.
