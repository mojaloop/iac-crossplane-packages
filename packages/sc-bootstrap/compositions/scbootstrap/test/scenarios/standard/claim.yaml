apiVersion: sc.mojaloop.io/v1alpha1
kind: XSCBootstrap
metadata:
  name: name
  namespace: namespace
spec:
  parameters:
    calico:
      # Changing the chart version and values will not trigger a new deployment and it will not update the existing deployment.
      chartVersion: 3.30.0
      values:
        installation:
          enabled: true
          registry: mirror.gcr.io
    argocd:
      # Changing the chart version and values will not trigger a new deployment and it will not update the existing deployment.
      chartVersion: 7.6.12
      values:
        fullnameOverride: argocd
        configs:
          cm:
            exec.enabled: "true"
            kustomize.buildOptions: "--enable-helm --helm-kube-version 1.29-0 --load-restrictor LoadRestrictionsNone"
            application.resourceTrackingMethod: "annotation"
          params:
            server.insecure: true
            server.enable.proxy.extension: "true"
            controller.diff.server.side: "true"
          cmp:
            create: true
            plugins:
              envsubstappofapp:
                init:
                  command: ["sh", "-c"]
                  args: ["kustomize build . --load-restrictor LoadRestrictionsNone -o raw-kustomization.yaml"]
                generate:
                  command: ["sh", "-c"]
                  args: ["envsubst < raw-kustomization.yaml > processed-kustomization.yaml && cp processed-kustomization.yaml /dev/stdout"]
                discover:
                  fileName: "kustomization.*"
              envsubst:
                discover:
                  fileName: "kustomization.*"
                generate:
                  command: ["sh", "-c"]
                  args: ["for f in *.yaml ; do cat $f | envsubst > $f.sub && mv $f.sub $f ; done && kustomize build . --enable-helm --helm-kube-version 1.29-0 --load-restrictor LoadRestrictionsNone > /dev/stdout"]
        repoServer:
          env:
            - name: HELM_CACHE_HOME
              value: /helm-working-dir
            - name: HELM_CONFIG_HOME
              value: /helm-working-dir
            - name: HELM_DATA_HOME
              value: /helm-working-dir
          volumes:
            - name: custom-tools
              emptyDir: {}
            - name: cmp-plugin
              configMap:
                name: argocd-cmp-cm
          initContainers:
            - name: download-tools
              image: golang:1.22.4-alpine3.20
              command: ["sh", "-c"]
              args: ["apk add git && go install github.com/drone/envsubst/cmd/envsubst@v1.0.3 && mv $GOPATH/bin/envsubst /custom-tools/ && wget https://gist.githubusercontent.com/enriched/11c7d81aa271b258f835620b1aca2e55/raw/2017a4202da30506b1fedc2981afed41e259fe77/in-pod-kubeconfig.sh && chmod +x in-pod-kubeconfig.sh && mv in-pod-kubeconfig.sh /custom-tools/"]
              volumeMounts:
                - mountPath: /custom-tools
                  name: custom-tools
          extraContainers:
            - name: debug-tools
              image: quay.io/argoproj/argocd
              command: ["sh", "-c"]
              args: ["while true; do echo \"running\"; sleep 300; done"]
              volumeMounts:
                - mountPath: /var/run/argocd
                  name: var-files
                - mountPath: /home/argocd/cmp-server/plugins
                  name: plugins
                - mountPath: /tmp
                  name: tmp
                - name: custom-tools
                  subPath: envsubst
                  mountPath: /usr/local/bin/envsubst
                - name: custom-tools
                  subPath: in-pod-kubeconfig.sh
                  mountPath: /usr/local/bin/in-pod-kubeconfig.sh
                - name: helm-working-dir
                  mountPath: /helm-working-dir
            - name: envsubstappofapp
              command: ["/var/run/argocd/argocd-cmp-server"]
              image: quay.io/argoproj/argocd
              args: ["--loglevel", "debug"]
              securityContext:
                runAsNonRoot: true
                runAsUser: 999
              volumeMounts:
                - mountPath: /var/run/argocd
                  name: var-files
                - mountPath: /home/argocd/cmp-server/plugins
                  name: plugins
                - mountPath: /tmp
                  name: tmp
                - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                  subPath: envsubstappofapp.yaml
                  name: cmp-plugin
                - name: custom-tools
                  subPath: envsubst
                  mountPath: /usr/local/bin/envsubst
            - name: envsubst
              command: ["/var/run/argocd/argocd-cmp-server"]
              image: quay.io/argoproj/argocd
              args: ["--loglevel", "debug"]
              securityContext:
                runAsNonRoot: true
                runAsUser: 999
              volumeMounts:
                - mountPath: /var/run/argocd
                  name: var-files
                - mountPath: /home/argocd/cmp-server/plugins
                  name: plugins
                - mountPath: /tmp
                  name: tmp
                - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                  subPath: envsubst.yaml
                  name: cmp-plugin
                - name: custom-tools
                  subPath: envsubst
                  mountPath: /usr/local/bin/envsubst
      application:
        source:
          repoURL: https://github.com/mojaloop/iac-modules.git
          path: gitops/argo-apps/overlays/local/storage-cluster
          targetRevision: main
          envVars:
          - name: CLUSTER_NAME
            value: ccinfra
  providerConfigsRef:
    scK8sProviderName: sc-kubernetes-provider
    scHelmProviderName: sc-helm-provider
  managementPolicies:
    - "*"
