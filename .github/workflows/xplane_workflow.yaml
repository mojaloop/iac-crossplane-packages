name: ðŸš€ Crossplane Package Pipeline

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
      registry:
        required: true
        type: string
      packages_dir:
        required: true
        type: string
      release_name:
        required: false
        type: string
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  pull-request-package:
    name: ðŸ§ª PR Preview Package
    if: ${{ github.ref_type != 'tag' && github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: ðŸ”¢ Calculate PR Pre-Release Version
        id: version
        run: |
          bash .github/scripts/get-next-version.sh ${{ inputs.package }} > base_version.txt
          BASE_VERSION=$(cat base_version.txt)
          SUFFIX="-pr${{ github.event.pull_request.number }}-${{ github.run_id }}"
          echo "next_version=${BASE_VERSION}${SUFFIX}" >> $GITHUB_OUTPUT

      - name: ðŸš€ Build & Push
        uses: ./.github/workflows/xplane_pull_request.yaml
        with:
          CROSSPLANE_PACKAGES_DIR: ${{ inputs.packages_dir }}
          CROSSPLANE_REGISTRY_URL: ${{ inputs.registry }}
          SUBPATH: ${{ inputs.package }}
          NEXT_VERSION: v${{ steps.version.outputs.next_version }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

  release-package:
    name: ðŸš€ Release Package
    if: ${{ github.ref_type == 'tag' || github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: ðŸ”¢ Calculate Release Version
        id: version
        run: |
          bash .github/scripts/get-next-version.sh ${{ inputs.package }} > next_version.txt
          VERSION=$(cat next_version.txt)
          echo "next_version=$VERSION" >> $GITHUB_OUTPUT

      - name: ðŸš€ Build & Push
        uses: ./.github/workflows/xplane_pull_request.yaml
        with:
          CROSSPLANE_PACKAGES_DIR: ${{ inputs.packages_dir }}
          CROSSPLANE_REGISTRY_URL: ${{ inputs.registry }}
          SUBPATH: ${{ inputs.package }}
          NEXT_VERSION: v${{ steps.version.outputs.next_version }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
