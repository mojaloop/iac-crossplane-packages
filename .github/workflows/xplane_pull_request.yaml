name: üì¶ Crossplane Package Pipeline

on:
  workflow_call:
    inputs:
      CROSSPLANE_PACKAGES_DIR:
        required: true
        type: string
        description: "Directory containing Crossplane packages"

      CROSSPLANE_REGISTRY_URL:
        required: true
        type: string
        description: "URL of the container registry for Crossplane packages"

      SUBPATH:
        required: true
        type: string
        description: "Composition subpath to package"

      NEXT_VERSION:
        required: true
        type: string
        description: "Version tag for the package"

    secrets:
      REGISTRY_USERNAME:
        description: "Username for container registry to login"
        required: true

      REGISTRY_PASSWORD:
        description: "Password for container registry to login"
        required: true

jobs:
  # Package crossplane composition
  package-composition:
    name: üì¶ Package Crossplane Composition
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: üîë Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.CROSSPLANE_REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: üõ†Ô∏è Setup Crossplane CLI
        run: |
          curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh
          sudo mv crossplane /usr/local/bin/

      - name: ‚úÖ Validate and Prepare
        working-directory: ${{ inputs.CROSSPLANE_PACKAGES_DIR }}
        run: |
          echo "üîç Preparing package for ${{ inputs.SUBPATH }}"
          make all PACKAGE_NAME=${{ inputs.SUBPATH }}

      - name: üì¶ Create Package
        working-directory: ${{ inputs.CROSSPLANE_PACKAGES_DIR }}
        run: |
          echo "üì¶ Packaging ${{ inputs.SUBPATH }} version ${{ inputs.NEXT_VERSION }}"
          # Create package directory if it doesn't exist
          mkdir -p ${{ inputs.SUBPATH }}/package
          crossplane xpkg build --package-root=${{ inputs.SUBPATH }}/configuration -o ${{ inputs.SUBPATH }}/package/${{ inputs.SUBPATH }}-${{ inputs.NEXT_VERSION }}.xpkg

      - name: üì§ Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.SUBPATH }}-package
          path: ${{ inputs.CROSSPLANE_PACKAGES_DIR }}/${{ inputs.SUBPATH }}/package/${{ inputs.SUBPATH }}-${{ inputs.NEXT_VERSION }}.xpkg
          if-no-files-found: error
          retention-days: 1

  # publish crossplane package
  publish-package:
    name: üì° Publish Crossplane Package
    runs-on: ubuntu-latest
    needs:
      - package-composition
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üì• Download Package Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.SUBPATH }}-package
          path: ./artifacts

      - name: üõ†Ô∏è Setup Crossplane CLI
        run: "curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh"

      - name: üîë Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.CROSSPLANE_REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: üöÄ Push Package to Registry
        run: |
          echo "üì° Publishing ${{ inputs.SUBPATH }} version ${{ inputs.NEXT_VERSION }} to registry"
          ./crossplane --verbose xpkg push -f ./artifacts/${{ inputs.SUBPATH }}-${{ inputs.NEXT_VERSION }}.xpkg ${{ inputs.CROSSPLANE_REGISTRY_URL }}/${{ inputs.SUBPATH }}:${{ inputs.NEXT_VERSION }}

      - name: ‚ú® Summary
        run: |
          echo "‚úÖ Successfully published ${{ inputs.SUBPATH }} version ${{ inputs.NEXT_VERSION }} to ${{ inputs.CROSSPLANE_REGISTRY_URL }}"
